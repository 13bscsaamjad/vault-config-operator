name: Build and Publish Helm Chart

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: false
        default: ''

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: '3.15.0'

    - name: Determine version
      id: version
      run: |
        if [[ "${{ github.event.inputs.version }}" != "" ]]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        elif [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        else
          echo "version=0.0.1-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        fi

    - name: Build and push Docker image
      run: |
        IMAGE_TAG="${{ env.REGISTRY }}/${{ github.repository_owner }}/vault-config-operator:${{ steps.version.outputs.version }}"
        make docker-build IMG="${IMAGE_TAG}"
        docker push "${IMAGE_TAG}"

    - name: Build Helm chart
      run: |
        IMAGE_TAG="${{ env.REGISTRY }}/${{ github.repository_owner }}/vault-config-operator:${{ steps.version.outputs.version }}"
        make helmchart VERSION="${{ steps.version.outputs.version }}" IMG="${IMAGE_TAG}"

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Package Helm chart
      run: |
        mkdir -p ./helm-repo
        helm package ./charts/vault-config-operator/ -d ./helm-repo/
        helm repo index ./helm-repo/ --url "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./helm-repo

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: ncipollo/release-action@v1
      with:
        artifacts: "./helm-repo/vault-config-operator-${{ steps.version.outputs.version }}.tgz"
        body: |
          ## Vault Config Operator ${{ steps.version.outputs.version }}
          
          This release includes configurable drift detection for Vault resource reconciliation.
          
          ### ðŸš€ Features
          - âœ… Configurable drift detection via `ENABLE_DRIFT_DETECTION` flag
          - âœ… Unified predicate combining immediate and periodic reconciliation  
          - âœ… Backward compatible with existing deployments
          
          ### ðŸ“¦ Installation
          
          **Helm Chart:**
          ```bash
          helm repo add vault-config-operator https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
          helm repo update
          helm install vault-config-operator vault-config-operator/vault-config-operator --version ${{ steps.version.outputs.version }}
          ```
          
          **Docker Image:**
          ```
          ${{ env.REGISTRY }}/${{ github.repository_owner }}/vault-config-operator:${{ steps.version.outputs.version }}
          ```
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Summary
      run: |
        echo "## ðŸŽ‰ Build and Publish Completed!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Docker Image:** ${{ env.REGISTRY }}/${{ github.repository_owner }}/vault-config-operator:${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Helm Repository:** https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Installation" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "helm repo add vault-config-operator https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" >> $GITHUB_STEP_SUMMARY
        echo "helm install vault-config-operator vault-config-operator/vault-config-operator --version ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
