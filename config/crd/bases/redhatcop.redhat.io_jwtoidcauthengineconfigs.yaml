---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: jwtoidcauthengineconfigs.redhatcop.redhat.io
spec:
  group: redhatcop.redhat.io
  names:
    kind: JWTOIDCAuthEngineConfig
    listKind: JWTOIDCAuthEngineConfigList
    plural: jwtoidcauthengineconfigs
    singular: jwtoidcauthengineconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: JWTOIDCAuthEngineConfig is the Schema for the jwtoidcauthengineconfigs
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: JWTOIDCAuthEngineConfigSpec defines the desired state of
              JWTOIDCAuthEngineConfig
            properties:
              JWKSCAPEM:
                default: ""
                description: The CA certificate or chain of certificates, in PEM format,
                  to use to validate connections to the JWKS URL. If not set, system
                  certificates are used.
                type: string
              JWKSURL:
                default: ""
                description: JWKS URL to use to authenticate signatures. Cannot be
                  used with "oidc_discovery_url" or "jwt_validation_pubkeys"
                type: string
              JWTSupportedAlgs:
                default: ""
                description: A list of supported signing algorithms. Defaults to [RS256]
                  for OIDC roles. Defaults to all available algorithms for JWT roles
                items:
                  type: string
                type: array
              JWTValidationPubKeys:
                default: ""
                description: A list of PEM-encoded public keys to use to authenticate
                  signatures locally. Cannot be used with "jwks_url" or "oidc_discovery_url"
                items:
                  type: string
                type: array
              OIDCClientID:
                default: ""
                description: The OAuth Client ID from the provider for OIDC roles.
                type: string
              OIDCClientSecret:
                default: ""
                description: The OAuth Client Secret from the provider for OIDC roles.
                type: string
              OIDCDiscoveryCAPEM:
                default: ""
                description: The CA certificate or chain of certificates, in PEM format,
                  to use to validate connections to the OIDC Discovery URL. If not
                  set, system certificates are used
                type: string
              OIDCDiscoveryURL:
                default: ""
                description: The OIDC Discovery URL, without any .well-known component
                  (base path). Cannot be used with "jwks_url" or "jwt_validation_pubkeys"
                type: string
              OIDCResponseMode:
                default: ""
                description: The response mode to be used in the OAuth2 request. Allowed
                  values are "query" and "form_post". Defaults to "query". If using
                  Vault namespaces, and oidc_response_mode is "form_post", then "namespace_in_state"
                  should be set to false
                type: string
              OIDCResponseTypes:
                default: ""
                description: 'The response types to request. Allowed values are "code"
                  and "id_token". Defaults to "code". Note: "id_token" may only be
                  used if "oidc_response_mode" is set to "form_post"'
                items:
                  type: string
                type: array
              authentication:
                properties:
                  namespace:
                    description: Namespace is the Vault namespace to be used in all
                      the operations withing this connection/authentication. Only
                      available in Vault Enterprise.
                    type: string
                  path:
                    default: kubernetes
                    description: Path is the path of the role used for this kube auth
                      authentication. The operator will try to authenticate at {[namespace/]}auth/{spec.path}
                    pattern: ^(?:/?[\w;:@&=\$-\.\+]*)+/?
                    type: string
                  role:
                    description: Role the role to be used during authentication
                    type: string
                  serviceAccount:
                    default:
                      name: default
                    description: ServiceAccount is the service account used for the
                      kube auth authentication
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                type: object
              boundIssuer:
                default: ""
                description: The value against which to match the iss claim in a JWT
                type: string
              defaultRole:
                default: ""
                description: The default role to use if none is provided during login
                type: string
              namespaceInState:
                default: ""
                description: Pass namespace in the OIDC state parameter instead of
                  as a separate query parameter. With this setting, the allowed redirect
                  URL(s) in Vault and on the provider side should not contain a namespace
                  query parameter. This means only one redirect URL entry needs to
                  be maintained on the provider side for all vault namespaces that
                  will be authenticating against it. Defaults to true for new configs
                type: boolean
              path:
                description: Path at which to make the configuration. The final path
                  will be {[spec.authentication.namespace]}/auth/{spec.path}/config/{metadata.name}.
                  The authentication role must have the following capabilities = [
                  "create", "read", "update", "delete"] on that path.
                pattern: ^(?:/?[\w;:@&=\$-\.\+]*)+/?
                type: string
              providerConfig:
                additionalProperties:
                  type: string
                default: ""
                description: 'Configuration options for provider-specific handling.
                  Providers with specific handling include: Azure, Google. The options
                  are described in each provider''s section in OIDC Provider Setup'
                type: object
            type: object
          status:
            description: JWTOIDCAuthEngineConfigStatus defines the observed state
              of JWTOIDCAuthEngineConfig
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
