
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: databasesecretengineconfigs.redhatcop.redhat.io
spec:
  group: redhatcop.redhat.io
  names:
    kind: DatabaseSecretEngineConfig
    listKind: DatabaseSecretEngineConfigList
    plural: databasesecretengineconfigs
    singular: databasesecretengineconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatabaseSecretEngineConfig is the Schema for the databasesecretengineconfigs
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseSecretEngineConfigSpec defines the desired state
              of DatabaseSecretEngineConfig
            properties:
              allowedRoles:
                default:
                - '*'
                description: AllowedRoles List of the roles allowed to use this connection.
                  Defaults to empty (no roles), if contains a "*" any role can use
                  this connection.
                items:
                  type: string
                type: array
                uniqueItems: true
                x-kubernetes-list-type: set
              connecectionURL:
                description: ConnecectionURL Specifies the connection string used
                  to connect to the database. Some plugins use url rather than connection_url.
                  This allows for simple templating of the username and password of
                  the root user. Typically, this is done by including a {{username}},
                  {{name}}, and/or {{password}} field within the string. These fields
                  are typically be replaced with the values in the username and password
                  fields.
                type: string
              databaseSpecificConfig:
                additionalProperties:
                  type: string
                description: DatabaseSpecificConfig this are the configuraiton specific
                  to each database type
                type: object
                x-kubernetes-map-type: granular
              passwordPolicy:
                description: 'PasswordPolicy The name of the password policy to use
                  when generating passwords for this database. If not specified, this
                  will use a default policy defined as: 20 characters with at least
                  1 uppercase, 1 lowercase, 1 number, and 1 dash character.'
                type: string
              pluginName:
                description: PluginName Specifies the name of the plugin to use for
                  this connection.
                type: string
              rootCredentialsFromSecret:
                description: 'ConfiguationFromSecret retrieves the credentials from
                  a Kubernetes secret. The secret must be of basicauth type (https://kubernetes.io/docs/concepts/configuration/secret/#basic-authentication-secret).
                  This will map the "username" and "password" keys of the secret to
                  the username and password of this config. All other keys will be
                  ignored. Only one of RootCredentialsFromVaultSecret or RootCredentialsFromSecret
                  can be specified. username: Specifies the name of the user to use
                  as the "root" user when connecting to the database. This "root"
                  user is used to create/update/delete users managed by these plugins,
                  so you will need to ensure that this user has permissions to manipulate
                  users appropriate to the database. This is typically used in the
                  connection_url field via the templating directive {{username}} or
                  {{name}}. password: Specifies the password to use when connecting
                  with the username. This value will not be returned by Vault when
                  performing a read upon the configuration. This is typically used
                  in the connection_url field via the templating directive {{password}}.'
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              rootCredentialsFromVaultSecret:
                description: 'ConfiguationFromSecret retrieves the credentials from
                  a Vault secret. This will map the "username" and "password" keys
                  of the secret to the username and password of this config. All other
                  keys will be ignored. Only one of RootCredentialsFromVaultSecret
                  or RootCredentialsFromSecret can be specified. username: Specifies
                  the name of the user to use as the "root" user when connecting to
                  the database. This "root" user is used to create/update/delete users
                  managed by these plugins, so you will need to ensure that this user
                  has permissions to manipulate users appropriate to the database.
                  This is typically used in the connection_url field via the templating
                  directive {{username}} or {{name}}. password: Specifies the password
                  to use when connecting with the username. This value will not be
                  returned by Vault when performing a read upon the configuration.
                  This is typically used in the connection_url field via the templating
                  directive {{password}}.'
                properties:
                  path:
                    description: Path is the path to the secret
                    type: string
                type: object
              rootRotationStatements:
                description: RootRotationStatements Specifies the database statements
                  to be executed to rotate the root user's credentials. See the plugin's
                  API page for more information on support and formatting for this
                  parameter.
                items:
                  type: string
                type: array
                uniqueItems: true
                x-kubernetes-list-type: set
              verifyConnection:
                default: true
                description: VerifyConnection Specifies if the connection is verified
                  during initial configuration. Defaults to true.
                type: boolean
            type: object
          status:
            description: DatabaseSecretEngineConfigStatus defines the observed state
              of DatabaseSecretEngineConfig
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
